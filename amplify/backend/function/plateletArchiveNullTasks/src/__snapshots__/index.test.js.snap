// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`plateletArchiver convert items from null archived to 0 1`] = `
[MockFunction] {
  "calls": [
    [
      "
    query listTasks($nextToken: String, filter: {archived: {ne: 0}, and: {archived: {ne: 1}}}, limit: 100) {
        listTasks(nextToken: $nextToken) {
            items {
                id
                _version
                archived
            }
            nextToken
        }
    }
",
      {
        "nextToken": null,
      },
    ],
    [
      "
    query listTasks($nextToken: String, filter: {archived: {ne: 0}, and: {archived: {ne: 1}}}, limit: 100) {
        listTasks(nextToken: $nextToken) {
            items {
                id
                _version
                archived
            }
            nextToken
        }
    }
",
      {
        "nextToken": "tasktoken",
      },
    ],
    [
      "
    mutation UpdateTask($input: UpdateTaskInput!) {
        updateTask(input: $input) {
            id
            archived
        }
    }
",
      {
        "input": {
          "_version": 1,
          "archived": 0,
          "id": "someTaskId",
        },
      },
    ],
    [
      "
    mutation UpdateTask($input: UpdateTaskInput!) {
        updateTask(input: $input) {
            id
            archived
        }
    }
",
      {
        "input": {
          "_version": 1,
          "archived": 0,
          "id": "anotherTaskId",
        },
      },
    ],
    [
      "
    query listComments($nextToken: String, filter: {archived: {ne: 0}, and: {archived: {ne: 1}}}, limit: 100) {
        listComments(nextToken: $nextToken) {
            items {
                id
                _version
                archived
            }
            nextToken
        }
    }
",
      {
        "nextToken": null,
      },
    ],
    [
      "
    query listComments($nextToken: String, filter: {archived: {ne: 0}, and: {archived: {ne: 1}}}, limit: 100) {
        listComments(nextToken: $nextToken) {
            items {
                id
                _version
                archived
            }
            nextToken
        }
    }
",
      {
        "nextToken": "comtoken",
      },
    ],
    [
      "
    mutation UpdateComment($input: UpdateCommentInput!) {
        updateComment(input: $input) {
            id
            archived
        };
    };
",
      {
        "input": {
          "_version": 1,
          "archived": 0,
          "id": "someCommentId",
        },
      },
    ],
    [
      "
    mutation UpdateComment($input: UpdateCommentInput!) {
        updateComment(input: $input) {
            id
            archived
        };
    };
",
      {
        "input": {
          "_version": 1,
          "archived": 0,
          "id": "someCommentId",
        },
      },
    ],
    [
      "
    query listLocations($nextToken: String, filter: {archived: {ne: 0}, and: {archived: {ne: 1}}}, limit: 100) {
        listLocations(nextToken: $nextToken) {
            items {
                id
                _version
                archived
            }
            nextToken
        }
    }
",
      {
        "nextToken": null,
      },
    ],
    [
      "
    query listLocations($nextToken: String, filter: {archived: {ne: 0}, and: {archived: {ne: 1}}}, limit: 100) {
        listLocations(nextToken: $nextToken) {
            items {
                id
                _version
                archived
            }
            nextToken
        }
    }
",
      {
        "nextToken": "loctoken",
      },
    ],
    [
      "
    mutation UpdateLocation($input: UpdateLocationInput!) {
        updateLocation(input: $input) {
            id
            archived
        };
    };
",
      {
        "input": {
          "_version": 1,
          "archived": 0,
          "id": "someLocationId",
        },
      },
    ],
    [
      "
    mutation UpdateLocation($input: UpdateLocationInput!) {
        updateLocation(input: $input) {
            id
            archived
        };
    };
",
      {
        "input": {
          "_version": 1,
          "archived": 0,
          "id": "someLocationId",
        },
      },
    ],
    [
      "
    query listDeliverables($nextToken: String, filter: {archived: {ne: 0}, and: {archived: {ne: 1}}}, limit: 100) {
        listDeliverables(nextToken: $nextToken) {
            items {
                id
                _version
                archived
            }
            nextToken
        }
    }
",
      {
        "nextToken": null,
      },
    ],
    [
      "
    query listDeliverables($nextToken: String, filter: {archived: {ne: 0}, and: {archived: {ne: 1}}}, limit: 100) {
        listDeliverables(nextToken: $nextToken) {
            items {
                id
                _version
                archived
            }
            nextToken
        }
    }
",
      {
        "nextToken": "deltoken",
      },
    ],
    [
      "
    mutation UpdateDeliverable($input: UpdateDeliverableInput!) {
        updateDeliverable(input: $input) {
            id
            archived
        };
    };
",
      {
        "input": {
          "_version": 1,
          "archived": 0,
          "id": "someDeliverableId",
        },
      },
    ],
    [
      "
    mutation UpdateDeliverable($input: UpdateDeliverableInput!) {
        updateDeliverable(input: $input) {
            id
            archived
        };
    };
",
      {
        "input": {
          "_version": 1,
          "archived": 0,
          "id": "someDeliverableId",
        },
      },
    ],
    [
      "
    query listTaskAssignees($nextToken: String, filter: {archived: {ne: 0}, and: {archived: {ne: 1}}}, limit: 100) {
        listTaskAssignees(nextToken: $nextToken) {
            items {
                id
                _version
                archived
            }
            nextToken
        }
    }
",
      {
        "nextToken": null,
      },
    ],
    [
      "
    query listTaskAssignees($nextToken: String, filter: {archived: {ne: 0}, and: {archived: {ne: 1}}}, limit: 100) {
        listTaskAssignees(nextToken: $nextToken) {
            items {
                id
                _version
                archived
            }
            nextToken
        }
    }
",
      {
        "nextToken": "asstoken",
      },
    ],
    [
      "
    mutation UpdateTaskAssignee($input: UpdateTaskAssigneeInput!) {
        updateTaskAssignee(input: $input) {
            id
            archived
        };
    };
",
      {
        "input": {
          "_version": 1,
          "archived": 0,
          "id": "someAssignmentId",
        },
      },
    ],
    [
      "
    mutation UpdateTaskAssignee($input: UpdateTaskAssigneeInput!) {
        updateTaskAssignee(input: $input) {
            id
            archived
        };
    };
",
      {
        "input": {
          "_version": 1,
          "archived": 0,
          "id": "someAssignmentId",
        },
      },
    ],
  ],
  "results": [
    {
      "type": "return",
      "value": Promise {},
    },
    {
      "type": "return",
      "value": Promise {},
    },
    {
      "type": "return",
      "value": Promise {},
    },
    {
      "type": "return",
      "value": Promise {},
    },
    {
      "type": "return",
      "value": Promise {},
    },
    {
      "type": "return",
      "value": Promise {},
    },
    {
      "type": "return",
      "value": Promise {},
    },
    {
      "type": "return",
      "value": Promise {},
    },
    {
      "type": "return",
      "value": Promise {},
    },
    {
      "type": "return",
      "value": Promise {},
    },
    {
      "type": "return",
      "value": Promise {},
    },
    {
      "type": "return",
      "value": Promise {},
    },
    {
      "type": "return",
      "value": Promise {},
    },
    {
      "type": "return",
      "value": Promise {},
    },
    {
      "type": "return",
      "value": Promise {},
    },
    {
      "type": "return",
      "value": Promise {},
    },
    {
      "type": "return",
      "value": Promise {},
    },
    {
      "type": "return",
      "value": Promise {},
    },
    {
      "type": "return",
      "value": Promise {},
    },
    {
      "type": "return",
      "value": Promise {},
    },
  ],
}
`;
